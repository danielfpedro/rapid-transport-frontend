{"version":3,"sources":["components/card-contact.tsx","components/main-content.tsx","components/contacts.tsx","components/QuoteStepOne.tsx","components/QuoteStepThree.tsx","components/QuoteStepTwo.tsx","components/QuoteStepTitle.tsx","components/StepsHeader.tsx","components/quote-form.tsx","components/header.tsx","components/navbar-items.tsx","components/my-footer.tsx","components/gallery-tile.jsx","components/my-gallery.tsx","components/my-navbar.tsx","components/service-card.tsx","components/our-job.tsx","App.js","serviceWorker.js","index.tsx"],"names":["CardContact","icon","title","content","Card","elevation","background","CardBody","pad","Box","direction","gap","Heading","level","margin","color","MainContent","id","children","width","backgroundColor","horizontal","vertical","align","Contacts","size","React","useContext","ResponsiveContext","bottom","top","fill","MailOption","Phone","Map","Clock","QuoteStepOne","setValidation","CITIES_TO_DISPLAY","Object","keys","citiesAndStates","forEach","key","city","push","sort","validateInputDate","value","isTouched","useState","citiesToDisplayFrom","setCitiesToDisplayFrom","citiesToDisplayTo","setCitiesToDisplayTo","dateSelected","setDateSelected","dateTouched","setDateTouched","fromSelected","setFromSelected","toSelected","setToSelected","handleSearch","searchText","setter","regexp","RegExp","filter","o","match","handleChange","option","now","Date","dateRangeStart","toISOString","setMonth","getMonth","dateRangeEnd","useEffect","FormField","label","error","onBlur","DateInput","name","format","calendarProps","bounds","onChange","e","handleDateChange","Select","options","searchPlaceholder","placeholder","onSearch","validateInputName","validateInputPhone","test","validateInputEmail","String","toLowerCase","QuoteStepThree","emailSelected","setEmailSelected","emailTouched","setEmailTouched","nameSelected","setNameSelected","nameTouched","setNameTouched","phoneSelected","setPhoneSelected","phoneTouched","setPhoneTouched","TextInput","target","MaskedInput","mask","fixed","length","getYears","output","lastValue","CURRENT_YEAR","i","hasValue","QuoteStepTwo","yearSelected","setYearSelected","makeSelected","setMakeSelected","modelSelected","setModelSelected","manufactures","QuoteStepTitle","onClick","flex","Button","style","marginTop","plain","disabled","getIcon","number","isValid","MapLocation","Car","User","StatusGood","StepsHeader","currentStep","setCurrentStep","stepOneIsValid","stepTwoIsValid","stepThreeIsValid","QuoteForm","setStepOneIsValid","setStepTwoIsValid","setStepThreeIsValid","CardHeader","textAlign","display","justify","alignContent","type","FormPreviousLink","handleNextButtonLabel","primary","FormNextLink","reverse","handleCanGoNext","Header","backgroundImage","process","backgroundPosition","backgroundRepeat","backgroundSize","alignSelf","textShadow","items","href","NavbarItems","dir","map","item","Anchor","MyFooter","left","right","Facebook","Instagram","Text","GalleryTile","filename","MyGallery","basis","weight","height","grow","MyNavbar","socialMedia","Image","src","ServiceCard","text","OurJob","DocumentText","Deliver","App","Boolean","window","location","hostname","myTheme","deepMerge","grommet","global","colors","brand","facebook","instagram","font","family","anchor","dark","light","ReactDOM","render","StrictMode","Grommet","theme","full","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.5ffb2cd7.chunk.js","sourcesContent":["import { Box, Card, CardBody, Heading } from 'grommet';\r\nimport React from 'react';\r\n\r\nconst CardContact = ({ icon, title, content = null }) => {\r\n  return (\r\n    <Card elevation=\"0\" background=\"white\">\r\n      <CardBody pad=\"large\">\r\n        <Box direction=\"row\" gap=\"medium\">\r\n          <Box>{icon}</Box>\r\n          <Box>\r\n            <Box>\r\n              <Heading level=\"4\" margin=\"none\" color=\"dark-1\">\r\n                {title}\r\n              </Heading>\r\n            </Box>\r\n            {content && (\r\n              <Box>\r\n                <Heading level=\"3\" margin=\"none\" color=\"dark-1\">\r\n                  {content}\r\n                </Heading>\r\n              </Box>\r\n            )}\r\n          </Box>\r\n        </Box>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default CardContact;\r\n","import { Box } from 'grommet';\r\nimport React from 'react';\r\n\r\ntype DefaultProps = {\r\n  children: any;\r\n  width?: string;\r\n  backgroundColor?: string;\r\n  pad?: any;\r\n  id?: string;\r\n};\r\n\r\nconst MainContent = ({\r\n  id,\r\n  children,\r\n  width = 'xlarge',\r\n  backgroundColor = null,\r\n  pad = { horizontal: 'large', vertical: 'xlarge' },\r\n}: DefaultProps) => {\r\n  return (\r\n    <Box id={id} align=\"center\" background={backgroundColor} pad={pad}>\r\n      <Box width={width}>{children}</Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default MainContent;\r\n","import { Box, Heading, ResponsiveContext } from 'grommet';\r\nimport { Clock, MailOption, Map, Phone } from 'grommet-icons';\r\nimport React from 'react';\r\nimport CardContact from './card-contact';\r\nimport MainContent from './main-content';\r\n\r\nconst Contacts = () => {\r\n  const size = React.useContext(ResponsiveContext);\r\n\r\n  return (\r\n    <Box background=\"light-3\" id=\"contact\">\r\n      <MainContent>\r\n        <Box align=\"center\">\r\n          <Heading level=\"2\" margin={{ bottom: 'large', top: 'none' }}>\r\n            Get In Touch With Us\r\n          </Heading>\r\n        </Box>\r\n        <Box gap=\"large\">\r\n          <Box direction={size !== 'small' ? 'row' : 'column'} gap=\"large\">\r\n            <Box fill>\r\n              <CardContact\r\n                icon={<MailOption color=\"brand\" size=\"large\" />}\r\n                title=\"Email\"\r\n                content=\"example@gmail.com\"\r\n              />\r\n            </Box>\r\n            <Box fill>\r\n              <CardContact\r\n                icon={<Phone color=\"brand\" size=\"large\" />}\r\n                title=\"Phone\"\r\n                content=\"(88) 9844-6655\"\r\n              />\r\n            </Box>\r\n          </Box>\r\n\r\n          <Box direction={size !== 'small' ? 'row' : 'column'} gap=\"large\">\r\n            <Box fill>\r\n              <CardContact\r\n                icon={<Map color=\"brand\" size=\"large\" />}\r\n                title=\"Location\"\r\n                content=\"Phoenix, Arizona USA\"\r\n              />\r\n            </Box>\r\n            <Box fill>\r\n              <CardContact\r\n                icon={<Clock color=\"brand\" size=\"large\" />}\r\n                title=\"Working Hour\"\r\n                content=\"09:00 - 16:00\"\r\n              />\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n      </MainContent>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Contacts;\r\n","import { Box, DateInput, FormField, Select } from 'grommet';\r\nimport React, { useEffect, useState } from 'react';\r\nimport citiesAndStates from '../data/citiesAndStates.json';\r\n\r\nconst QuoteStepOne = ({ setValidation }) => {\r\n  let CITIES_TO_DISPLAY = [];\r\n  Object.keys(citiesAndStates).forEach((key) =>\r\n    citiesAndStates[key].forEach((city) =>\r\n      CITIES_TO_DISPLAY.push(`${city} [${key}]`)\r\n    )\r\n  );\r\n  CITIES_TO_DISPLAY.sort();\r\n\r\n  const validateInputDate = (value, isTouched) => {\r\n    if (!value && isTouched) {\r\n      return `Date can't be blank.`;\r\n    }\r\n    return '';\r\n  };\r\n\r\n  // FROM\r\n  const [citiesToDisplayFrom, setCitiesToDisplayFrom] = useState<string[]>(\r\n    CITIES_TO_DISPLAY\r\n  );\r\n  // TO\r\n  const [citiesToDisplayTo, setCitiesToDisplayTo] = useState<string[]>(\r\n    CITIES_TO_DISPLAY\r\n  );\r\n\r\n  const [dateSelected, setDateSelected] = useState('');\r\n  const [dateTouched, setDateTouched] = useState(false);\r\n\r\n  const [fromSelected, setFromSelected] = useState('');\r\n  const [toSelected, setToSelected] = useState(null);\r\n\r\n  const states: string[] = Object.keys(citiesAndStates).sort();\r\n  states.push('');\r\n\r\n  const handleSearch = (searchText, setter) => {\r\n    const regexp = new RegExp(searchText, 'i');\r\n    setter(\r\n      searchText\r\n        ? CITIES_TO_DISPLAY.filter((o) => o.match(regexp))\r\n        : CITIES_TO_DISPLAY\r\n    );\r\n  };\r\n\r\n  const handleChange = ({ option }, setter) => {\r\n    setter(option);\r\n  };\r\n\r\n  const now = new Date();\r\n  const dateRangeStart = now.toISOString();\r\n  now.setMonth(now.getMonth() + 24);\r\n  const dateRangeEnd = now.toISOString();\r\n\r\n  useEffect(() => {\r\n    setValidation(\r\n      fromSelected !== '' &&\r\n        fromSelected !== null &&\r\n        toSelected !== '' &&\r\n        toSelected !== null &&\r\n        validateInputDate(dateSelected, true) === ''\r\n    );\r\n  }, [fromSelected, toSelected]);\r\n\r\n  const handleDateChange = (e) => {\r\n    setDateSelected(e.value);\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <FormField\r\n        label=\"Ship Date\"\r\n        error={validateInputDate(dateSelected, dateTouched)}\r\n        onBlur={() => setDateTouched(true)}\r\n      >\r\n        <DateInput\r\n          name=\"date\"\r\n          format=\"mm/dd/yyyy\"\r\n          calendarProps={{\r\n            bounds: [dateRangeStart, dateRangeEnd],\r\n          }}\r\n          onChange={(e) => handleDateChange(e)}\r\n        />\r\n      </FormField>\r\n      <FormField label=\"Pickup location\">\r\n        <Select\r\n          options={citiesToDisplayFrom}\r\n          value={fromSelected}\r\n          searchPlaceholder=\"Search a city...\"\r\n          placeholder=\"Select a city:\"\r\n          onSearch={(e) => handleSearch(e, setCitiesToDisplayFrom)}\r\n          onChange={(e) => handleChange(e, setFromSelected)}\r\n        ></Select>\r\n      </FormField>\r\n      <FormField label=\"Delivery location\">\r\n        <Select\r\n          options={citiesToDisplayTo}\r\n          onSearch={(e) => handleSearch(e, setCitiesToDisplayTo)}\r\n          onChange={(e) => handleChange(e, setToSelected)}\r\n          value={toSelected}\r\n          searchPlaceholder=\"Search a city...\"\r\n          placeholder=\"Select a city:\"\r\n        ></Select>\r\n      </FormField>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default QuoteStepOne;\r\n","import { Box, FormField, MaskedInput, TextInput } from 'grommet';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nconst validateInputName = (value, isTouched) => {\r\n  if (!value && isTouched) {\r\n    return `Name can't be blank.`;\r\n  }\r\n  return '';\r\n};\r\n\r\nconst validateInputPhone = (value, isTouched) => {\r\n  if (!value && isTouched) {\r\n    return `Phone can't be blank.`;\r\n  }\r\n  if (value && isTouched) {\r\n    const re = /^\\([0-9]{3}\\) [0-9]{3}-[0-9]{4}$/g;\r\n    if (!re.test(value)) {\r\n      return 'Phone is invalid.';\r\n    }\r\n  }\r\n\r\n  return '';\r\n};\r\nconst validateInputEmail = (value, isTouched) => {\r\n  if (!value && isTouched) {\r\n    return `Email can't be blank.`;\r\n  }\r\n  if (value && isTouched) {\r\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    if (!re.test(String(value).toLowerCase())) {\r\n      return `Email is invalid.`;\r\n    }\r\n  }\r\n\r\n  return '';\r\n};\r\n\r\nconst QuoteStepThree = ({ setValidation }) => {\r\n  const [emailSelected, setEmailSelected] = useState('');\r\n  const [emailTouched, setEmailTouched] = useState(false);\r\n\r\n  const [nameSelected, setNameSelected] = useState('');\r\n  const [nameTouched, setNameTouched] = useState(false);\r\n\r\n  const [phoneSelected, setPhoneSelected] = useState('');\r\n  const [phoneTouched, setPhoneTouched] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setValidation(\r\n      validateInputEmail(emailSelected, true) === '' &&\r\n        validateInputName(nameSelected, true) === '' &&\r\n        validateInputPhone(phoneSelected, true) === ''\r\n    );\r\n  }, [emailSelected, nameSelected, phoneSelected]);\r\n\r\n  const handleChange = (value, setter) => {\r\n    setter(value);\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <FormField\r\n        label=\"Email\"\r\n        error={validateInputEmail(emailSelected, emailTouched)}\r\n      >\r\n        <TextInput\r\n          name=\"email\"\r\n          placeholder=\"Type the name here...\"\r\n          value={emailSelected}\r\n          onChange={(e) => handleChange(e.target.value, setEmailSelected)}\r\n          onBlur={() => setEmailTouched(true)}\r\n        />\r\n      </FormField>\r\n      <FormField\r\n        label=\"Name\"\r\n        error={validateInputName(nameSelected, nameTouched)}\r\n      >\r\n        <TextInput\r\n          name=\"name\"\r\n          placeholder=\"Type the name here...\"\r\n          value={nameSelected}\r\n          onChange={(e) => handleChange(e.target.value, setNameSelected)}\r\n          onBlur={() => setNameTouched(true)}\r\n        />\r\n      </FormField>\r\n\r\n      <FormField\r\n        label=\"Phone\"\r\n        error={validateInputPhone(phoneSelected, phoneTouched)}\r\n      >\r\n        <MaskedInput\r\n          value={phoneSelected}\r\n          onChange={(e) => handleChange(e.target.value, setPhoneSelected)}\r\n          onBlur={() => setPhoneTouched(true)}\r\n          mask={[\r\n            { fixed: '(' },\r\n            {\r\n              placeholder: '___',\r\n              length: 3,\r\n            },\r\n            { fixed: ')' },\r\n            { fixed: ' ' },\r\n            {\r\n              placeholder: '___',\r\n              length: 3,\r\n              regexp: /[0-9]/,\r\n            },\r\n            { fixed: '-' },\r\n            {\r\n              placeholder: '____',\r\n              length: 4,\r\n              regexp: /[0-9]/,\r\n            },\r\n          ]}\r\n        />\r\n      </FormField>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default QuoteStepThree;\r\n","import { Box, FormField, Select, TextInput } from 'grommet';\r\nimport React, { useEffect, useState } from 'react';\r\nimport manufactures from '../data/manufactures.json';\r\n\r\nconst CURRENT_YEAR = 2020;\r\nconst YEARS_BACK = 70;\r\n\r\nconst getYears = () => {\r\n  let output = [];\r\n  let lastValue = CURRENT_YEAR + 1;\r\n\r\n  for (let i = 0; i < YEARS_BACK; i++) {\r\n    output.push(lastValue);\r\n    lastValue--;\r\n  }\r\n  return output;\r\n};\r\n\r\nconst hasValue = (value) => {\r\n  return value !== '' && value !== null;\r\n};\r\n\r\nconst QuoteStepTwo = ({ setValidation }) => {\r\n  const [yearSelected, setYearSelected] = useState('');\r\n  const [makeSelected, setMakeSelected] = useState('');\r\n  const [modelSelected, setModelSelected] = useState('');\r\n  useEffect(\r\n    () =>\r\n      setValidation(\r\n        hasValue(yearSelected) &&\r\n          hasValue(makeSelected) &&\r\n          hasValue(modelSelected)\r\n      ),\r\n    [yearSelected, makeSelected, modelSelected]\r\n  );\r\n\r\n  const handleChange = (value, setter) => {\r\n    setter(value);\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <FormField label=\"Year\">\r\n        <Select\r\n          options={getYears()}\r\n          value={yearSelected}\r\n          onChange={(e) => handleChange(e.option, setYearSelected)}\r\n          placeholder=\"Select a year:\"\r\n        ></Select>\r\n      </FormField>\r\n      <FormField label=\"Make\">\r\n        <Select\r\n          options={manufactures}\r\n          value={makeSelected}\r\n          onChange={(e) => handleChange(e.option, setMakeSelected)}\r\n          placeholder=\"Select vehicle make:\"\r\n        ></Select>\r\n      </FormField>\r\n      <FormField label=\"Model\">\r\n        <TextInput\r\n          placeholder=\"Type vehicle model...\"\r\n          value={modelSelected}\r\n          onChange={(e) => handleChange(e.target.value, setModelSelected)}\r\n        />\r\n      </FormField>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default QuoteStepTwo;\r\n","import { Anchor, Box, Button } from 'grommet';\r\nimport React from 'react';\r\n\r\nconst QuoteStepTitle = ({ icon, title, onClick }) => {\r\n  const getTitle = () => {\r\n    return (\r\n      <Box direction=\"column\" flex=\"grow\" align=\"center\">\r\n        <div>{title}</div>\r\n        <div style={{ marginTop: '15px' }}>{icon}</div>\r\n      </Box>\r\n    );\r\n  };\r\n  return (\r\n    <Box direction=\"column\" flex=\"grow\" align=\"center\">\r\n      <Button\r\n        label={getTitle()}\r\n        plain\r\n        fill\r\n        disabled={onClick == null}\r\n        onClick={onClick}\r\n      >\r\n        {icon}\r\n      </Button>\r\n      {/* <Box margin={{ bottom: '10px' }}>\r\n        \r\n      </Box>\r\n      <Box margin={{ top: '-10px' }}>\r\n        <Anchor icon={icon} />\r\n      </Box> */}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default QuoteStepTitle;\r\n","import { Box } from 'grommet';\r\nimport { Car, MapLocation, StatusGood, User } from 'grommet-icons';\r\nimport React from 'react';\r\nimport QuoteStepTitle from './QuoteStepTitle';\r\n\r\nconst getIcon = (number, isValid) => {\r\n  let icon;\r\n  switch (number) {\r\n    case 1:\r\n      icon = <MapLocation color=\"dark-1\" size=\"medium\" />;\r\n      break;\r\n    case 2:\r\n      icon = <Car color=\"dark-1\" size=\"medium\" />;\r\n      break;\r\n    case 3:\r\n      icon = <User color=\"dark-1\" size=\"medium\" />;\r\n      break;\r\n  }\r\n  if (isValid === true) {\r\n    return <StatusGood color=\"status-ok\" size=\"medium\" />;\r\n  }\r\n  return <Box>{icon}</Box>;\r\n};\r\n\r\nconst StepsHeader = ({\r\n  currentStep,\r\n  setCurrentStep,\r\n  stepOneIsValid,\r\n  stepTwoIsValid,\r\n  stepThreeIsValid,\r\n}) => {\r\n  return (\r\n    <Box direction=\"row\">\r\n      <QuoteStepTitle\r\n        icon={getIcon(1, stepOneIsValid)}\r\n        title=\"Shipment Info\"\r\n        onClick={\r\n          stepOneIsValid === true || currentStep === 1\r\n            ? () => setCurrentStep(1)\r\n            : null\r\n        }\r\n      />\r\n      <Box fill></Box>\r\n      <QuoteStepTitle\r\n        icon={getIcon(2, stepTwoIsValid)}\r\n        title=\"Vehicle Info\"\r\n        onClick={\r\n          stepOneIsValid === true || currentStep === 2\r\n            ? () => setCurrentStep(2)\r\n            : null\r\n        }\r\n      />\r\n      <Box fill></Box>\r\n      <QuoteStepTitle\r\n        icon={getIcon(3, stepThreeIsValid)}\r\n        title=\"Contact Info\"\r\n        onClick={\r\n          stepTwoIsValid === true || currentStep === 3\r\n            ? () => setCurrentStep(3)\r\n            : null\r\n        }\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default StepsHeader;\r\n","import { Box, Button, Card, CardBody, CardHeader, Heading } from 'grommet';\r\nimport { FormNextLink, FormPreviousLink } from 'grommet-icons';\r\nimport React, { useState } from 'react';\r\nimport QuoteStepOne from './QuoteStepOne';\r\nimport QuoteStepThree from './QuoteStepThree';\r\nimport QuoteStepTwo from './QuoteStepTwo';\r\nimport StepsHeader from './StepsHeader';\r\n\r\nconst TOTAL_SLIDES = 3;\r\n\r\nconst QuoteForm = () => {\r\n  // const [canGoNext, setCanGoNext] = useState(false);\r\n  const [stepOneIsValid, setStepOneIsValid] = useState(false);\r\n  const [stepTwoIsValid, setStepTwoIsValid] = useState(false);\r\n  const [stepThreeIsValid, setStepThreeIsValid] = useState(false);\r\n\r\n  const handleCanGoNext = () => {\r\n    switch (currentStep) {\r\n      case 1:\r\n        return stepOneIsValid;\r\n      case 2:\r\n        return stepTwoIsValid;\r\n      case 3:\r\n        return stepThreeIsValid;\r\n    }\r\n  };\r\n\r\n  const [currentStep, setCurrentStep] = useState(1);\r\n  // const [stateSelected, setStateSelected] = useState();\r\n  // Cities\r\n  // const [citySelected, setCitySelected] = useState();\r\n\r\n  const handleNextSlide = () => {\r\n    const nextSlide = currentStep >= TOTAL_SLIDES ? 1 : currentStep + 1;\r\n    setCurrentStep(nextSlide);\r\n  };\r\n  const handlePrevSlide = () => {\r\n    const prevSlide = currentStep <= 1 ? TOTAL_SLIDES : currentStep - 1;\r\n    setCurrentStep(prevSlide);\r\n  };\r\n  const handleNextButtonLabel = () => {\r\n    switch (currentStep) {\r\n      case 1:\r\n        return 'Vehicle info';\r\n      case 2:\r\n        return 'Contact info';\r\n      case 3:\r\n        return 'Get Quote!';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card background=\"white\">\r\n      <CardHeader pad=\"medium\">\r\n        <Heading level=\"3\" margin=\"none\" color=\"dark-1\" textAlign=\"center\">\r\n          Get an instant quote or call now (888) 666-8929\r\n        </Heading>\r\n      </CardHeader>\r\n\r\n      <CardBody pad=\"medium\">\r\n        <Box margin={{ bottom: '50px' }}>\r\n          <StepsHeader\r\n            currentStep={currentStep}\r\n            setCurrentStep={setCurrentStep}\r\n            stepOneIsValid={stepOneIsValid}\r\n            stepTwoIsValid={stepTwoIsValid}\r\n            stepThreeIsValid={stepThreeIsValid}\r\n          />\r\n        </Box>\r\n\r\n        <Box style={{ display: currentStep === 1 ? '' : 'none' }}>\r\n          <QuoteStepOne setValidation={setStepOneIsValid} />\r\n        </Box>\r\n        <Box style={{ display: currentStep === 2 ? '' : 'none' }}>\r\n          <QuoteStepTwo setValidation={setStepTwoIsValid} />\r\n        </Box>\r\n        <Box style={{ display: currentStep === 3 ? '' : 'none' }}>\r\n          <QuoteStepThree setValidation={setStepThreeIsValid} />\r\n        </Box>\r\n\r\n        <Box\r\n          direction=\"row\"\r\n          gap=\"medium\"\r\n          justify=\"stretch\"\r\n          align=\"center\"\r\n          alignContent=\"center\"\r\n        >\r\n          {currentStep !== 1 && (\r\n            <Box width=\"200px\">\r\n              <Button\r\n                type=\"button\"\r\n                label=\"Back\"\r\n                icon={<FormPreviousLink />}\r\n                size=\"medium\"\r\n                margin={{ top: 'medium' }}\r\n                onClick={handlePrevSlide}\r\n              />\r\n            </Box>\r\n          )}\r\n          <Box fill>\r\n            <Button\r\n              type=\"button\"\r\n              label={handleNextButtonLabel()}\r\n              primary\r\n              icon={<FormNextLink />}\r\n              size=\"large\"\r\n              reverse={true}\r\n              margin={{ top: 'medium' }}\r\n              onClick={handleNextSlide}\r\n              disabled={!handleCanGoNext()}\r\n            />\r\n          </Box>\r\n        </Box>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default QuoteForm;\r\n","import { Box, Heading, ResponsiveContext } from 'grommet';\r\nimport React from 'react';\r\nimport MainContent from './main-content';\r\nimport QuoteForm from './quote-form';\r\n\r\nconst Header = () => {\r\n  const size = React.useContext(ResponsiveContext);\r\n\r\n  return (\r\n    <Box\r\n      id=\"quote\"\r\n      align=\"center\"\r\n      style={{\r\n        backgroundImage: `url(${process.env.PUBLIC_URL}/images/header.png)`,\r\n        backgroundPosition: 'center, center',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundSize: '2560px auto',\r\n        backgroundColor: '#000',\r\n      }}\r\n    >\r\n      <MainContent>\r\n        <Box\r\n          align=\"center\"\r\n          direction={size !== 'small' ? 'row' : 'column'}\r\n          gap=\"xlarge\"\r\n        >\r\n          <Box fill alignSelf=\"start\">\r\n            <Heading\r\n              color=\"light-1\"\r\n              margin={{ bottom: 'medium', top: 'none' }}\r\n              textAlign={size !== 'small' ? 'start' : 'center'}\r\n              style={{ textShadow: '0px 2px 1px rgba(0, 0, 0, 1)' }}\r\n            >\r\n              Economia, rapidez e segurança!\r\n            </Heading>\r\n\r\n            <Heading\r\n              color=\"light-1\"\r\n              level=\"3\"\r\n              margin=\"none\"\r\n              textAlign={size !== 'small' ? 'start' : 'center'}\r\n              style={{ textShadow: '0px 1px 1px rgba(0, 0, 0, 1)' }}\r\n            >\r\n              Com a Rapid Transport USA você pode enviar seu veículo para\r\n              qualquer lugar dos EUA.\r\n            </Heading>\r\n          </Box>\r\n\r\n          <Box width=\"large\">\r\n            <QuoteForm />\r\n          </Box>\r\n        </Box>\r\n      </MainContent>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { Anchor, Box } from 'grommet';\r\nimport React from 'react';\r\n\r\nconst items = [\r\n  {\r\n    label: 'Quote',\r\n    href: '#quote',\r\n  },\r\n  {\r\n    label: 'How It Works',\r\n    href: '#how-it-works',\r\n  },\r\n  {\r\n    label: 'About Us',\r\n    href: '#about-us',\r\n  },\r\n  {\r\n    label: 'Contact',\r\n    href: '#contact',\r\n  },\r\n];\r\n\r\nconst NavbarItems = ({ dir }) => {\r\n  return (\r\n    <Box align=\"center\" gap=\"large\" direction={dir}>\r\n      {items.map((item) => (\r\n        <Anchor\r\n          href={item.href}\r\n          label={item.label}\r\n          key={item.label}\r\n          color=\"dark-1\"\r\n        />\r\n      ))}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default NavbarItems;\r\n","import { Box, ResponsiveContext, Text } from 'grommet';\r\nimport { Facebook, Instagram } from 'grommet-icons';\r\nimport React from 'react';\r\nimport MainContent from './main-content';\r\nimport NavbarItems from './navbar-items';\r\n\r\nconst MyFooter = () => {\r\n\tconst size = React.useContext(ResponsiveContext);\r\n\r\n\treturn (\r\n\t\t<Box background=\"light-1\">\r\n\t\t\t<MainContent pad={{ top: 'xlarge', bottom: 'large', left: 'xlarge', right: 'xlarge' }}>\r\n\t\t\t\t<Box align=\"center\">\r\n\t\t\t\t\t<Box direction=\"row\" gap=\"small\" align=\"center\">\r\n\t\t\t\t\t\t<Facebook color=\"dark-4\" size=\"22em\" />\r\n\t\t\t\t\t\t<Instagram color=\"dark-4\" size=\"22em\" />\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t<Box\r\n\t\t\t\t\t\tmargin={\r\n\t\t\t\t\t\t\tsize !== 'small' ? (\r\n\t\t\t\t\t\t\t\t{ top: 'medium', bottom: 'large' }\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t{ vertical: 'xlarge', horizontal: 'none' }\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\talign=\"center\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<NavbarItems dir={size !== 'small' ? 'row' : 'column'} />\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t<Box>\r\n\t\t\t\t\t\t<Text margin=\"none\" size=\"medium\" textAlign=\"center\">\r\n\t\t\t\t\t\t\tRapid Transport 2020 - Phoenix, Arizona USA . (88) 87445544\r\n\t\t\t\t\t\t</Text>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Box>\r\n\t\t\t</MainContent>\r\n\t\t</Box>\r\n\t);\r\n};\r\n\r\nexport default MyFooter;\r\n","import { Box, Card } from 'grommet';\r\nimport React from 'react';\r\n\r\nconst GalleryTile = ({ filename }) => {\r\n  return (\r\n    <Card fill elevation=\"0\">\r\n      <Box\r\n        style={{\r\n          backgroundImage: `url(${process.env.PUBLIC_URL}/images/${filename}.jpg)`,\r\n          backgroundPosition: 'center, center',\r\n          backgroundRepeat: 'no-repeat',\r\n          backgroundSize: 'cover',\r\n          backgroundColor: '#000',\r\n        }}\r\n        fill\r\n      ></Box>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default GalleryTile;\r\n","import { Box, Heading, ResponsiveContext, Text } from 'grommet';\r\nimport React from 'react';\r\nimport GalleryTile from './gallery-tile';\r\nimport MainContent from './main-content';\r\n\r\nconst MyGallery = () => {\r\n  const size = React.useContext(ResponsiveContext);\r\n\r\n  return (\r\n    <Box background=\"#000\" id=\"about-us\">\r\n      <MainContent>\r\n        <Box>\r\n          <Box>\r\n            <Heading\r\n              color=\"light-1\"\r\n              level=\"1\"\r\n              margin={{ bottom: 'medium', top: 'none' }}\r\n            >\r\n              Nós sabemos como fazer\r\n            </Heading>\r\n            <Box direction=\"row\" margin={{ bottom: 'large' }}>\r\n              <Box background=\"\" basis={size !== 'small' ? '2/3' : '1'}>\r\n                <Text\r\n                  size={size !== 'small' ? '1.3em' : '1em'}\r\n                  weight={size !== 'small' ? 'bold' : 'normal'}\r\n                >\r\n                  Com experiência de anos no mercado, fazemos transportes de\r\n                  veículos para todo o país garantindo economia, segurança e\r\n                  rapidez.\r\n                </Text>\r\n              </Box>\r\n            </Box>\r\n          </Box>\r\n\r\n          <Box\r\n            direction={size !== 'small' ? 'row' : 'column'}\r\n            height={size !== 'small' ? '500px' : '300px'}\r\n            gap=\"large\"\r\n            margin={{ bottom: 'medium' }}\r\n          >\r\n            <Box flex={{ grow: 2 }}>\r\n              <GalleryTile filename=\"gal-5\" />\r\n            </Box>\r\n            {size !== 'small' && (\r\n              <Box\r\n                flex={{ grow: 1 }}\r\n                gap=\"large\"\r\n                direction={size !== 'small' ? 'column' : 'row'}\r\n              >\r\n                <GalleryTile filename=\"gal-8\" />\r\n                <GalleryTile filename=\"gal-1\" />\r\n              </Box>\r\n            )}\r\n          </Box>\r\n        </Box>\r\n      </MainContent>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default MyGallery;\r\n","import React from 'react';\r\nimport { Box, Header, Image, Nav, ResponsiveContext } from 'grommet';\r\nimport { Facebook, Instagram } from 'grommet-icons';\r\nimport MainContent from './main-content';\r\nimport NavbarItems from './navbar-items';\r\n\r\nconst MyNavbar = () => {\r\n  const size = React.useContext(ResponsiveContext);\r\n\r\n  const socialMedia = (\r\n    <Box direction=\"row\" gap=\"small\">\r\n      <Facebook color=\"facebook\" />\r\n      <Instagram color=\"instagram\" />\r\n    </Box>\r\n  );\r\n  const items = (\r\n    <Box gap=\"large\" direction=\"row\">\r\n      <NavbarItems dir=\"row\" />\r\n      {socialMedia}\r\n    </Box>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Box background=\"white\">\r\n        <MainContent\r\n          width=\"xxlarge\"\r\n          pad={{ horizontal: 'large', vertical: '2em' }}\r\n        >\r\n          <Box direction=\"row\" fill align=\"center\">\r\n            <Box flex={{ grow: 1 }} align={size !== 'small' ? null : 'center'}>\r\n              <Image\r\n                src={`${process.env.PUBLIC_URL}/images/logo.png`}\r\n                width={size !== 'small' ? '340px' : '280px'}\r\n              />\r\n            </Box>\r\n            {size !== 'small' && items}\r\n          </Box>\r\n        </MainContent>\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyNavbar;\r\n","import { Box, Card, Heading, Text } from 'grommet';\r\nimport React from 'react';\r\n\r\nconst ServiceCard = ({ icon, title = 'Title Here', text }) => {\r\n\treturn (\r\n\t\t<Card elevation=\"0\" fill>\r\n\t\t\t<Box alignSelf=\"center\" margin={{ bottom: 'large' }}>\r\n\t\t\t\t{/* <Image src={`images/vectors/${filename}.svg`} fill /> */}\r\n\t\t\t\t{icon}\r\n\t\t\t</Box>\r\n\t\t\t<Box>\r\n\t\t\t\t<Heading level={3} color=\"dark-1\" textAlign=\"center\" margin={{ bottom: 'small', top: 'none' }}>\r\n\t\t\t\t\t{title}\r\n\t\t\t\t</Heading>\r\n\t\t\t\t<Text textAlign=\"center\">{text}</Text>\r\n\t\t\t</Box>\r\n\t\t</Card>\r\n\t\t// <Box align=\"center\" margin=\"none\">\r\n\t\t//   <Box margin={{bottom: 'medium'}}>\r\n\t\t//     {icon}\r\n\t\t//   </Box>\r\n\t\t//   <Box>\r\n\t\t//     <Text color=\"dark-2\" size=\"large\" textAlign=\"center\" margin=\"none\">\r\n\t\t//       You don't have to code to create your own site. Select one of\r\n\t\t//       available themes in the Mobirise sitebuilder.\r\n\t\t//     </Text>\r\n\t\t//   </Box>\r\n\t\t// </Box>\r\n\t);\r\n};\r\n\r\nexport default ServiceCard;\r\n","import { Box, Button, ResponsiveContext } from 'grommet';\r\nimport { Deliver, DocumentText, StatusGood } from 'grommet-icons';\r\nimport React from 'react';\r\nimport MainContent from './main-content';\r\nimport ServiceCard from './service-card';\r\n\r\nconst OurJob = () => {\r\n  const size = React.useContext(ResponsiveContext);\r\n\r\n  return (\r\n    <MainContent id=\"how-it-works\">\r\n      <Box\r\n        direction={size !== 'small' ? 'row' : 'column'}\r\n        gap={size !== 'small' ? 'large' : 'xlarge'}\r\n        align=\"start\"\r\n      >\r\n        <ServiceCard\r\n          title=\"Cotação\"\r\n          text=\"Solicite sua cotação pelo site ou por telefone. Você receberá o orçamento com a garantia do melhor preço.\"\r\n          // icon={<Contact color={iconColor} size=\"large\" />}\r\n          icon={<DocumentText size=\"large\" />}\r\n        />\r\n        <ServiceCard\r\n          title=\"Nós fazemos tudo\"\r\n          text=\"Na data agendada, seu veículo será transportado com cobertura total pela seguradora.\"\r\n          icon={<Deliver size=\"large\" />}\r\n        />\r\n        <ServiceCard\r\n          title=\"Entrega\"\r\n          text=\"Após o transporte feito com total cuidado e segurança, você recebe o veículo no endereço combinado.\"\r\n          icon={<StatusGood size=\"large\" />}\r\n        />\r\n      </Box>\r\n\r\n      <Box pad={{ top: '60px', bottom: 'none' }} align=\"center\">\r\n        <Box width=\"medium\">\r\n          <Button\r\n            size=\"large\"\r\n            reverse={true}\r\n            primary\r\n            label=\"Quote now!\"\r\n            href=\"#quote\"\r\n          />\r\n        </Box>\r\n      </Box>\r\n    </MainContent>\r\n  );\r\n};\r\n\r\nexport default OurJob;\r\n","import { Box } from 'grommet';\r\nimport React from 'react';\r\nimport Contacts from './components/contacts';\r\nimport Header from './components/header';\r\nimport MyFooter from './components/my-footer';\r\nimport MyGallery from './components/my-gallery';\r\nimport MyNavbar from './components/my-navbar';\r\nimport OurJob from './components/our-job';\r\n\r\nfunction App() {\r\n  return (\r\n    <Box>\r\n      <MyNavbar />\r\n      <Header />\r\n      <OurJob />\r\n      <MyGallery />\r\n      <Contacts />\r\n      <MyFooter />\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { deepMerge } from 'grommet/utils';\r\nimport { Grommet, grommet } from 'grommet';\r\n\r\nconst myTheme = deepMerge(grommet, {\r\n\tglobal: {\r\n\t\tcolors: {\r\n\t\t\tbrand: '#d64541',\r\n\t\t\tfacebook: '#007fff',\r\n\t\t\tinstagram: '#E00086'\r\n\t\t},\r\n\t\tfont: {\r\n\t\t\tfamily: 'Jost'\r\n\t\t},\r\n\t\tanchor: {\r\n\t\t\tcolor: {\r\n\t\t\t\tdark: 'green',\r\n\t\t\t\tlight: 'light-1'\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n});\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<Grommet theme={myTheme} full>\r\n\t\t\t<App />\r\n\t\t</Grommet>\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}