{"version":3,"sources":["components/main-content.tsx","components/navbar-items.tsx","components/my-navbar.tsx","components/QuoteStepOne.tsx","components/QuoteStepThree.tsx","components/QuoteStepTwo.tsx","components/StepsHeader.tsx","components/quote-form.tsx","components/header.tsx","components/service-card.tsx","components/our-job.tsx","components/gallery-tile.jsx","components/my-gallery.tsx","components/card-contact.tsx","components/contacts.tsx","components/my-footer.tsx","App.js","serviceWorker.js","index.tsx"],"names":["MainContent","children","width","backgroundColor","pad","horizontal","vertical","Box","align","background","items","label","NavbarItems","dir","gap","direction","map","item","Anchor","key","color","MyNavbar","size","React","useContext","ResponsiveContext","socialMedia","Facebook","Instagram","fill","flex","grow","Image","src","QuoteStepOne","setValidation","CITIES_TO_DISPLAY","Object","keys","citiesAndStates","forEach","city","push","sort","useState","citiesToDisplayFrom","setCitiesToDisplayFrom","citiesToDisplayTo","setCitiesToDisplayTo","fromSelected","setFromSelected","toSelected","setToSelected","handleSearch","searchText","setter","regexp","RegExp","filter","o","match","handleChange","option","useEffect","FormField","Select","options","value","placeholder","searchPlaceholder","onSearch","e","onChange","QuoteStepThree","nameSelected","setNameSelected","emailSelected","setEmailSelected","phoneSelected","setPhoneSelected","TextInput","target","getYears","output","lastValue","CURRENT_YEAR","Array","QuoteStepTwo","yearSelected","setYearSelected","makeSelected","setMakeSelected","modelSelected","setModelSelected","manufactures","StepsHeader","justify","StatusGood","Heading","level","height","QuoteForm","stepOneIsValid","setStepOneIsValid","stepTwoIsValid","setStepTwoIsValid","stepThreeIsValid","setStepThreeIsValid","currentStep","setCurrentStep","Card","CardHeader","margin","textAlign","CardBody","Button","type","primary","icon","FormPreviousLink","plain","top","onClick","handleNextButtonLabel","FormNextLink","reverse","disabled","handleCanGoNext","Header","style","backgroundImage","backgroundPosition","backgroundRepeat","backgroundSize","alignSelf","bottom","textShadow","ServiceCard","title","text","elevation","Text","OurJob","DocumentText","Deliver","GalleryTile","filename","MyGallery","basis","weight","CardContact","content","Contacts","MailOption","Phone","Map","Clock","MyFooter","left","right","App","Boolean","window","location","hostname","myTheme","deepMerge","grommet","global","colors","brand","facebook","instagram","font","family","anchor","dark","light","ReactDOM","render","StrictMode","Grommet","theme","full","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.19209e1a.chunk.js","sourcesContent":["import { Box } from 'grommet';\nimport React from 'react';\n\ntype DefaultProps = {\n\tchildren: any;\n\twidth?: string;\n\tbackgroundColor?: string;\n\tpad?: any;\n};\n\nconst MainContent = ({\n\tchildren,\n\twidth = 'xlarge',\n\tbackgroundColor = null,\n\tpad = { horizontal: 'large', vertical: 'xlarge' }\n}: DefaultProps) => {\n\treturn (\n\t\t<Box align=\"center\" background={backgroundColor} pad={pad}>\n\t\t\t<Box width={width}>{children}</Box>\n\t\t</Box>\n\t);\n};\n\nexport default MainContent;\n","import { Anchor, Box } from 'grommet';\nimport React from 'react';\n\nconst items = [\n\t{\n\t\tlabel: 'How It Works'\n\t},\n\t{\n\t\tlabel: 'About Us'\n\t},\n\t{\n\t\tlabel: 'Contact'\n\t},\n\t{\n\t\tlabel: 'Contacts'\n\t}\n];\n\nconst NavbarItems = ({ dir }) => {\n\treturn (\n\t\t<Box align=\"center\" gap=\"large\" direction={dir}>\n\t\t\t{items.map((item) => <Anchor label={item.label} key={item.label} color=\"dark-1\" />)}\n\t\t</Box>\n\t);\n};\n\nexport default NavbarItems;\n","import React from 'react';\nimport { Box, Image, ResponsiveContext } from 'grommet';\nimport { Facebook, Instagram } from 'grommet-icons';\nimport MainContent from './main-content';\nimport NavbarItems from './navbar-items';\n\nconst MyNavbar = () => {\n\tconst size = React.useContext(ResponsiveContext);\n\n\tconst socialMedia = (\n\t\t<Box direction=\"row\" gap=\"small\">\n\t\t\t<Facebook color=\"facebook\" />\n\t\t\t<Instagram color=\"instagram\" />\n\t\t</Box>\n\t);\n\tconst items = (\n\t\t<Box gap=\"large\" direction=\"row\">\n\t\t\t<NavbarItems dir=\"row\" />\n\t\t\t{socialMedia}\n\t\t</Box>\n\t);\n\n\treturn (\n\t\t<Box background=\"white\">\n\t\t\t<MainContent width=\"xxlarge\" pad={{ horizontal: 'large', vertical: '2em' }}>\n\t\t\t\t<Box direction=\"row\" fill align=\"center\">\n\t\t\t\t\t<Box flex={{ grow: 1 }} align={size !== 'small' ? null : 'center'}>\n\t\t\t\t\t\t<Image src=\"images/logo.png\" width={size !== 'small' ? '340px' : '280px'} />\n\t\t\t\t\t</Box>\n\t\t\t\t\t{size !== 'small' && items}\n\t\t\t\t</Box>\n\t\t\t</MainContent>\n\t\t</Box>\n\t);\n};\n\nexport default MyNavbar;\n","import { Box, FormField, Select } from \"grommet\";\nimport React, { useEffect, useState } from \"react\";\nimport citiesAndStates from '../data/citiesAndStates.json';\n\n\nconst QuoteStepOne = ({ setValidation }) => {\n\n    let CITIES_TO_DISPLAY = [];\n    Object.keys(citiesAndStates).forEach((key) => citiesAndStates[key].forEach(city => CITIES_TO_DISPLAY.push(`${city} [${key}]`)));\n    CITIES_TO_DISPLAY.sort();\n\n    // FROM\n    const [citiesToDisplayFrom, setCitiesToDisplayFrom] = useState<string[]>(CITIES_TO_DISPLAY);\n    // TO\n    const [citiesToDisplayTo, setCitiesToDisplayTo] = useState<string[]>(CITIES_TO_DISPLAY);\n\n    const [fromSelected, setFromSelected] = useState(null);\n    const [toSelected, setToSelected] = useState(null);\n\n    const states: string[] = Object.keys(citiesAndStates).sort();\n    states.push(\"\");\n\n    const handleStateChange = ({ option }) => {\n        if (option) {\n            // setCitiesToDisplay(citiesAndStates[option].sort());\n        }\n    }\n    const handleSearch = (searchText, setter) => {\n        const regexp = new RegExp(searchText, 'i');\n        setter(searchText ? CITIES_TO_DISPLAY.filter(o => o.match(regexp)) : CITIES_TO_DISPLAY);\n    }\n    const handleChange = ({ option }, setter) => {\n        setter(option);\n    }\n\n    useEffect(() => setValidation(fromSelected && toSelected), [fromSelected, toSelected]);\n\n    return <Box>\n        <FormField label=\"Ship car FROM\">\n            <Select\n                options={citiesToDisplayFrom}\n                value={fromSelected}\n                placeholder=\"Select the city:\"\n                searchPlaceholder=\"Search a city...\"\n                onSearch={(e) => handleSearch(e, setCitiesToDisplayFrom)}\n                onChange={(e) => handleChange(e, setFromSelected)}\n            ></Select>\n        </FormField>\n        <FormField label=\"Ship car TO\">\n            <Select\n                options={citiesToDisplayTo}\n                onSearch={(e) => handleSearch(e, setCitiesToDisplayTo)}\n                onChange={(e) => handleChange(e, setToSelected)}\n                value={toSelected}\n                placeholder=\"Select the city:\"\n\n            ></Select>\n        </FormField>\n    </Box>\n}\n\nexport default QuoteStepOne;","import { Box, FormField, Select, TextInput } from \"grommet\";\nimport React, { useEffect, useState } from \"react\";\n\nconst QuoteStepThree = ({ setValidation }) => {\n    const [nameSelected, setNameSelected] = useState(null);\n    const [emailSelected, setEmailSelected] = useState(null);\n    const [phoneSelected, setPhoneSelected] = useState(null);\n    useEffect(() => setValidation(nameSelected && emailSelected && phoneSelected), [nameSelected, emailSelected, phoneSelected]);\n\n    const handleChange = (value, setter) => {\n        setter(value);\n    }\n\n\n    return <Box>\n        <FormField label=\"Name\">\n            <TextInput placeholder=\"Type the name here...\" value={nameSelected} onChange={(e) => handleChange(e.target.value, setNameSelected)} />\n        </FormField>\n        <FormField label=\"Email\">\n            <TextInput placeholder=\"Type the name here...\" value={emailSelected} onChange={(e) => handleChange(e.target.value, setEmailSelected)} />\n        </FormField>\n        <FormField label=\"Phone\">\n            <TextInput placeholder=\"Type the phone here...\" value={phoneSelected} onChange={(e) => handleChange(e.target.value, setPhoneSelected)} />\n        </FormField>\n\n    </Box>\n}\n\nexport default QuoteStepThree;","import { Box, FormField, Select, TextInput } from \"grommet\";\nimport React, { useEffect, useState } from \"react\";\n\nimport manufactures from '../data/manufactures.json';\n\nconst CURRENT_YEAR = 2020;\nconst YEARS_BACK = 70;\n\nconst getYears = () => {\n    let output = [];\n    let lastValue = CURRENT_YEAR + 1;\n    for (let year of Array(YEARS_BACK)) {\n        output.push(lastValue);\n        lastValue--;\n    }\n    return output;\n}\n\nconst QuoteStepTwo = ({ setValidation }) => {\n\n    const [yearSelected, setYearSelected] = useState(null);\n    const [makeSelected, setMakeSelected] = useState(null);\n    const [modelSelected, setModelSelected] = useState(null);\n    useEffect(() => setValidation(yearSelected && makeSelected && modelSelected), [yearSelected, makeSelected, modelSelected]);\n\n    const handleChange = (value, setter) => {\n        setter(value);\n    }\n\n    return <Box>\n        <FormField label=\"Year\">\n            <Select\n                options={getYears()}\n                value={yearSelected}\n                onChange={(e) => handleChange(e.option, setYearSelected)}\n                placeholder=\"Select the year:\"\n            ></Select>\n        </FormField>\n        <FormField label=\"Make\">\n            <Select\n                options={manufactures}\n                value={makeSelected}\n                onChange={(e) => handleChange(e.option, setMakeSelected)}\n                placeholder=\"Select the vehicle make:\"\n            ></Select>\n        </FormField>\n        <FormField label=\"Model\" >\n            <TextInput\n                placeholder=\"Type the vehicle model\"\n                value={modelSelected}\n                onChange={(e) => handleChange(e.target.value, setModelSelected)} />\n        </FormField>\n\n    </Box>\n}\n\nexport default QuoteStepTwo;","import React from 'react'\nimport { Box, Heading } from \"grommet\";\nimport { Radial, StatusGood } from 'grommet-icons';\n\n\nconst StepsHeader = () => {\n    return <Box direction=\"row\" justify=\"between\">\n        <Box>\n            <Box>\n                <StatusGood />\n            </Box>\n            <Box>\n                <Heading level={5}>Location</Heading>\n            </Box>\n        </Box>\n        <Box color=\"green\" background=\"green\" fill>\n            .\n        </Box>\n        <Box>\n            <Box>\n                <StatusGood />\n            </Box>\n            <Box>\n                <Heading level={5}>Vehicle Info</Heading>\n            </Box>\n        </Box>\n        <Box background=\"green\" fill align=\"center\">\n            <Box background=\"pink\" height=\"20px\">\n                .\n            </Box>\n        </Box>\n        <Box>\n            <Box>\n                <StatusGood />\n            </Box>\n            <Box>\n                <Heading level={5}>Contact Info</Heading>\n            </Box>\n        </Box>\n    </Box >\n}\n\nexport default StepsHeader;","import {\n  Box,\n  Button,\n  Card,\n  CardBody,\n  CardHeader,\n\n  Heading\n} from 'grommet';\nimport { FormNextLink, FormPreviousLink } from 'grommet-icons';\nimport React, { useState } from 'react';\nimport QuoteStepOne from './QuoteStepOne';\nimport QuoteStepThree from './QuoteStepThree';\nimport QuoteStepTwo from './QuoteStepTwo';\nimport StepsHeader from './StepsHeader';\n\n\n\nconst TOTAL_SLIDES = 3;\n\nconst QuoteForm = () => {\n\n  // const [canGoNext, setCanGoNext] = useState(false);\n  const [stepOneIsValid, setStepOneIsValid] = useState(false);\n  const [stepTwoIsValid, setStepTwoIsValid] = useState(false);\n  const [stepThreeIsValid, setStepThreeIsValid] = useState(false);\n\n  const handleCanGoNext = () => {\n    switch (currentStep) {\n      case 1:\n        return stepOneIsValid;\n      case 2:\n        return stepTwoIsValid;\n      case 3:\n        return stepThreeIsValid;\n    }\n  }\n\n  const [currentStep, setCurrentStep] = useState(1);\n  const [stateSelected, setStateSelected] = useState();\n  // Cities\n  const [citySelected, setCitySelected] = useState();\n\n  const handleNextSlide = () => {\n    const nextSlide = currentStep >= TOTAL_SLIDES ? 1 : currentStep + 1;\n    setCurrentStep(nextSlide);\n  }\n  const handlePrevSlide = () => {\n    const prevSlide = currentStep <= 1 ? TOTAL_SLIDES : currentStep - 1;\n    setCurrentStep(prevSlide);\n  }\n  const handleNextButtonLabel = () => {\n    switch (currentStep) {\n      case 1:\n        return \"Vehicle info\";\n      case 2:\n        return \"Contact info\";\n      case 3:\n        return \"Get Quote!\";\n    }\n  }\n  return (\n    <Card background=\"white\">\n\n      <CardHeader pad=\"medium\">\n        <Heading level=\"3\" margin=\"none\" color=\"dark-1\" textAlign=\"center\">\n          Get an instant quote or call now (888) 666-8929\n        </Heading>\n      </CardHeader>\n\n      <CardBody pad=\"medium\">\n        <StepsHeader />\n        {currentStep == 1 && <QuoteStepOne setValidation={setStepOneIsValid} />}\n        {currentStep == 2 && <QuoteStepTwo setValidation={setStepTwoIsValid} />}\n        {currentStep == 3 && <QuoteStepThree setValidation={setStepThreeIsValid} />}\n\n        <Box direction=\"row\" gap=\"medium\" justify=\"stretch\">\n          {currentStep !== 1 && (<Box width=\"200px\">\n            <Button\n              type=\"button\"\n              label=\"Back\"\n              primary\n              icon={<FormPreviousLink />}\n              size=\"medium\"\n              plain\n              margin={{ top: 'medium' }}\n              onClick={handlePrevSlide}\n            />\n          </Box>)}\n          <Box fill>\n            <Button\n              type=\"button\"\n              label={handleNextButtonLabel()}\n              primary\n              icon={<FormNextLink />}\n              size=\"medium\"\n              reverse={true}\n              margin={{ top: 'medium' }}\n              onClick={handleNextSlide}\n              disabled={!handleCanGoNext()}\n            />\n          </Box>\n        </Box>\n      </CardBody>\n    </Card >\n  );\n};\n\nexport default QuoteForm;\n","import { Box, Heading, ResponsiveContext } from 'grommet';\nimport React from 'react';\nimport MainContent from './main-content';\nimport QuoteForm from './quote-form';\n\nconst Header = () => {\n\tconst size = React.useContext(ResponsiveContext);\n\n\treturn (\n\t\t<Box\n\t\t\talign=\"center\"\n\t\t\tstyle={{\n\t\t\t\tbackgroundImage: 'url(images/header.png)',\n\t\t\t\tbackgroundPosition: 'center, center',\n\t\t\t\tbackgroundRepeat: 'no-repeat',\n\t\t\t\tbackgroundSize: '2560px auto',\n\t\t\t\tbackgroundColor: '#000'\n\t\t\t}}\n\t\t>\n\t\t\t<MainContent>\n\t\t\t\t<Box align=\"center\" direction={size !== 'small' ? 'row' : 'column'} gap=\"xlarge\">\n\t\t\t\t\t<Box fill alignSelf=\"start\">\n\t\t\t\t\t\t<Heading\n\t\t\t\t\t\t\tcolor=\"light-1\"\n\t\t\t\t\t\t\tmargin={{ bottom: 'medium', top: 'none' }}\n\t\t\t\t\t\t\ttextAlign={size !== 'small' ? 'start' : 'center'}\n\t\t\t\t\t\t\tstyle={{ textShadow: '0px 2px 1px rgba(0, 0, 0, 1)' }}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tEconomia, rapidez e segurança!\n\t\t\t\t\t\t</Heading>\n\n\t\t\t\t\t\t<Heading\n\t\t\t\t\t\t\tcolor=\"light-1\"\n\t\t\t\t\t\t\tlevel=\"3\"\n\t\t\t\t\t\t\tmargin=\"none\"\n\t\t\t\t\t\t\ttextAlign={size !== 'small' ? 'start' : 'center'}\n\t\t\t\t\t\t\tstyle={{ textShadow: '0px 1px 1px rgba(0, 0, 0, 1)' }}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tCom a Rapid Transport USA você pode enviar seu veículo para qualquer lugar dos EUA.\n\t\t\t\t\t\t</Heading>\n\t\t\t\t\t</Box>\n\n\t\t\t\t\t<Box width=\"large\">\n\t\t\t\t\t\t<QuoteForm />\n\t\t\t\t\t</Box>\n\t\t\t\t</Box>\n\t\t\t</MainContent>\n\t\t</Box>\n\t);\n};\n\nexport default Header;\n","import { Box, Card, Heading, Text } from 'grommet';\nimport React from 'react';\n\nconst ServiceCard = ({ icon, title = 'Title Here', text }) => {\n\treturn (\n\t\t<Card elevation=\"0\" fill>\n\t\t\t<Box alignSelf=\"center\" margin={{ bottom: 'large' }}>\n\t\t\t\t{/* <Image src={`images/vectors/${filename}.svg`} fill /> */}\n\t\t\t\t{icon}\n\t\t\t</Box>\n\t\t\t<Box>\n\t\t\t\t<Heading level={3} color=\"dark-1\" textAlign=\"center\" margin={{ bottom: 'small', top: 'none' }}>\n\t\t\t\t\t{title}\n\t\t\t\t</Heading>\n\t\t\t\t<Text textAlign=\"center\">{text}</Text>\n\t\t\t</Box>\n\t\t</Card>\n\t\t// <Box align=\"center\" margin=\"none\">\n\t\t//   <Box margin={{bottom: 'medium'}}>\n\t\t//     {icon}\n\t\t//   </Box>\n\t\t//   <Box>\n\t\t//     <Text color=\"dark-2\" size=\"large\" textAlign=\"center\" margin=\"none\">\n\t\t//       You don't have to code to create your own site. Select one of\n\t\t//       available themes in the Mobirise sitebuilder.\n\t\t//     </Text>\n\t\t//   </Box>\n\t\t// </Box>\n\t);\n};\n\nexport default ServiceCard;\n","import { Box, Button, ResponsiveContext } from 'grommet';\nimport { Deliver, DocumentText, StatusGood } from 'grommet-icons';\nimport React from 'react';\nimport MainContent from './main-content';\nimport ServiceCard from './service-card';\n\nconst OurJob = () => {\n\tconst size = React.useContext(ResponsiveContext);\n\n\treturn (\n\t\t<MainContent>\n\t\t\t<Box\n\t\t\t\tdirection={size !== 'small' ? 'row' : 'column'}\n\t\t\t\tgap={size !== 'small' ? 'large' : 'xlarge'}\n\t\t\t\talign=\"start\"\n\t\t\t>\n\t\t\t\t<ServiceCard\n\t\t\t\t\ttitle=\"Cotação\"\n\t\t\t\t\ttext=\"Solicite sua cotação pelo site ou por telefone. Você receberá o orçamento com a garantia do melhor preço.\"\n\t\t\t\t\t// icon={<Contact color={iconColor} size=\"large\" />}\n\t\t\t\t\ticon={<DocumentText size=\"large\" />}\n\t\t\t\t/>\n\t\t\t\t<ServiceCard\n\t\t\t\t\ttitle=\"Nós fazemos tudo\"\n\t\t\t\t\ttext=\"Na data agendada, seu veículo será transportado com cobertura total pela seguradora.\"\n\t\t\t\t\ticon={<Deliver size=\"large\" />}\n\t\t\t\t/>\n\t\t\t\t<ServiceCard\n\t\t\t\t\ttitle=\"Entrega\"\n\t\t\t\t\ttext=\"Após o transporte feito com total cuidado e segurança, você recebe o veículo no endereço combinado.\"\n\t\t\t\t\ticon={<StatusGood size=\"large\" />}\n\t\t\t\t/>\n\t\t\t</Box>\n\n\t\t\t<Box pad={{ top: '60px', bottom: 'none' }} align=\"center\">\n\t\t\t\t<Box width=\"medium\">\n\t\t\t\t\t<Button size=\"large\" reverse={true} primary label=\"Quote now!\" />\n\t\t\t\t</Box>\n\t\t\t</Box>\n\t\t</MainContent>\n\t);\n};\n\nexport default OurJob;\n","import { Box, Card } from 'grommet';\nimport React from 'react';\n\nconst GalleryTile = ({ filename }) => {\n  return (\n    <Card fill elevation=\"0\">\n      <Box\n        style={{\n          backgroundImage: `url(images/${filename}.jpg)`,\n          backgroundPosition: 'center, center',\n          backgroundRepeat: 'no-repeat',\n          backgroundSize: 'cover',\n          backgroundColor: '#000',\n        }}\n        fill\n      ></Box>\n      {/* <Image src={`images/${filename}.jpg`} fit=\"cover\" height=\"300px\" /> */}\n    </Card>\n  );\n};\n\nexport default GalleryTile;\n","import { Box, Heading, ResponsiveContext, Text } from 'grommet';\nimport React from 'react';\nimport GalleryTile from './gallery-tile';\nimport MainContent from './main-content';\n\n\nconst MyGallery = () => {\n\tconst size = React.useContext(ResponsiveContext);\n\n\treturn (\n\t\t<Box background=\"#000\">\n\t\t\t<MainContent>\n\t\t\t\t<Box>\n\t\t\t\t\t<Box>\n\t\t\t\t\t\t<Heading color=\"light-1\" level=\"1\" margin={{ bottom: 'medium', top: 'none' }}>\n\t\t\t\t\t\t\tNós sabemos como fazer\n\t\t\t\t\t\t</Heading>\n\t\t\t\t\t\t<Box direction=\"row\" margin={{ bottom: 'large' }}>\n\t\t\t\t\t\t\t<Box background=\"\" basis={size !== 'small' ? '2/3' : '1'}>\n\t\t\t\t\t\t\t\t<Text\n\t\t\t\t\t\t\t\t\tsize={size !== 'small' ? '1.3em' : '1em'}\n\t\t\t\t\t\t\t\t\tweight={size !== 'small' ? 'bold' : 'normal'}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tCom experiência de anos no mercado, fazemos transportes de veículos para todo o país\n\t\t\t\t\t\t\t\t\tgarantindo economia, segurança e rapidez.\n\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</Box>\n\n\t\t\t\t\t<Box\n\t\t\t\t\t\tdirection={size !== 'small' ? 'row' : 'column'}\n\t\t\t\t\t\theight={size !== 'small' ? '500px' : '300px'}\n\t\t\t\t\t\tgap=\"large\"\n\t\t\t\t\t\tmargin={{ bottom: 'medium' }}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Box flex={{ grow: 2 }}>\n\t\t\t\t\t\t\t<GalleryTile filename=\"gal-5\" />\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t{size !== 'small' && (\n\t\t\t\t\t\t\t<Box flex={{ grow: 1 }} gap=\"large\" direction={size !== 'small' ? 'column' : 'row'}>\n\t\t\t\t\t\t\t\t<GalleryTile filename=\"gal-8\" />\n\t\t\t\t\t\t\t\t<GalleryTile filename=\"gal-1\" />\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Box>\n\t\t\t\t</Box>\n\t\t\t</MainContent>\n\t\t</Box>\n\t);\n};\n\nexport default MyGallery;\n","import { Box, Card, CardBody, Heading } from 'grommet';\nimport React from 'react';\n\nconst CardContact = ({ icon, title, content = null }) => {\n  return (\n    <Card elevation=\"0\" background=\"white\">\n      <CardBody pad=\"large\">\n        <Box direction=\"row\" gap=\"medium\">\n          <Box>{icon}</Box>\n          <Box>\n            <Box>\n              <Heading level=\"4\" margin=\"none\" color=\"dark-1\">\n                {title}\n              </Heading>\n            </Box>\n            {content && (\n              <Box>\n                <Heading level=\"3\" margin=\"none\" color=\"dark-1\">\n                  {content}\n                </Heading>\n              </Box>\n            )}\n          </Box>\n        </Box>\n      </CardBody>\n    </Card>\n  );\n};\n\nexport default CardContact;\n","import { Box, Heading, ResponsiveContext } from 'grommet';\nimport { Clock, MailOption, Map, Phone } from 'grommet-icons';\nimport React from 'react';\nimport CardContact from './card-contact';\nimport MainContent from './main-content';\n\nconst Contacts = () => {\n\tconst size = React.useContext(ResponsiveContext);\n\n\treturn (\n\t\t<Box background=\"light-3\">\n\t\t\t<MainContent>\n\t\t\t\t<Box align=\"center\">\n\t\t\t\t\t<Heading level=\"2\" margin={{ bottom: 'large', top: 'none' }}>\n\t\t\t\t\t\tGet In Touch With Us\n\t\t\t\t\t</Heading>\n\t\t\t\t</Box>\n\t\t\t\t<Box gap=\"large\">\n\t\t\t\t\t<Box direction={size !== 'small' ? 'row' : 'column'} gap=\"large\">\n\t\t\t\t\t\t<Box fill>\n\t\t\t\t\t\t\t<CardContact\n\t\t\t\t\t\t\t\ticon={<MailOption color=\"brand\" size=\"large\" />}\n\t\t\t\t\t\t\t\ttitle=\"Email\"\n\t\t\t\t\t\t\t\tcontent=\"example@gmail.com\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t<Box fill>\n\t\t\t\t\t\t\t<CardContact\n\t\t\t\t\t\t\t\ticon={<Phone color=\"brand\" size=\"large\" />}\n\t\t\t\t\t\t\t\ttitle=\"Phone\"\n\t\t\t\t\t\t\t\tcontent=\"(88) 9844-6655\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</Box>\n\n\t\t\t\t\t<Box direction={size !== 'small' ? 'row' : 'column'} gap=\"large\">\n\t\t\t\t\t\t<Box fill>\n\t\t\t\t\t\t\t<CardContact\n\t\t\t\t\t\t\t\ticon={<Map color=\"brand\" size=\"large\" />}\n\t\t\t\t\t\t\t\ttitle=\"Location\"\n\t\t\t\t\t\t\t\tcontent=\"Phoenix, Arizona USA\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t<Box fill>\n\t\t\t\t\t\t\t<CardContact\n\t\t\t\t\t\t\t\ticon={<Clock color=\"brand\" size=\"large\" />}\n\t\t\t\t\t\t\t\ttitle=\"Working Hour\"\n\t\t\t\t\t\t\t\tcontent=\"09:00 - 16:00\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</Box>\n\t\t\t\t</Box>\n\t\t\t</MainContent>\n\t\t</Box>\n\t);\n};\n\nexport default Contacts;\n","import { Box, ResponsiveContext, Text } from 'grommet';\nimport { Facebook, Instagram } from 'grommet-icons';\nimport React from 'react';\nimport MainContent from './main-content';\nimport NavbarItems from './navbar-items';\n\nconst MyFooter = () => {\n\tconst size = React.useContext(ResponsiveContext);\n\n\treturn (\n\t\t<Box background=\"light-1\">\n\t\t\t<MainContent pad={{ top: 'xlarge', bottom: 'large', left: 'xlarge', right: 'xlarge' }}>\n\t\t\t\t<Box align=\"center\">\n\t\t\t\t\t<Box direction=\"row\" gap=\"small\" align=\"center\">\n\t\t\t\t\t\t<Facebook color=\"dark-4\" size=\"22em\" />\n\t\t\t\t\t\t<Instagram color=\"dark-4\" size=\"22em\" />\n\t\t\t\t\t</Box>\n\t\t\t\t\t<Box\n\t\t\t\t\t\tmargin={\n\t\t\t\t\t\t\tsize !== 'small' ? (\n\t\t\t\t\t\t\t\t{ top: 'medium', bottom: 'large' }\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t{ vertical: 'xlarge', horizontal: 'none' }\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t\talign=\"center\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<NavbarItems dir={size !== 'small' ? 'row' : 'column'} />\n\t\t\t\t\t</Box>\n\t\t\t\t\t<Box>\n\t\t\t\t\t\t<Text margin=\"none\" size=\"medium\" textAlign=\"center\">\n\t\t\t\t\t\t\tRapid Transport 2020 - Phoenix, Arizona USA . (88) 87445544\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t</Box>\n\t\t\t\t</Box>\n\t\t\t</MainContent>\n\t\t</Box>\n\t);\n};\n\nexport default MyFooter;\n","import React from 'react';\nimport { Box } from 'grommet';\nimport MyNavbar from './components/my-navbar';\nimport Header from './components/header';\nimport OurJob from './components/our-job';\nimport MyGallery from './components/my-gallery';\nimport Contacts from './components/contacts';\nimport MyFooter from './components/my-footer';\n\nfunction App() {\n\treturn (\n\t\t<Box>\n\t\t\t<MyNavbar />\n\t\t\t<Header />\n\t\t\t<OurJob />\n\t\t\t<MyGallery />\n\t\t\t<Contacts />\n\t\t\t<MyFooter />\n\t\t</Box>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { deepMerge } from 'grommet/utils';\nimport { Grommet, grommet } from 'grommet';\n\nconst myTheme = deepMerge(grommet, {\n\tglobal: {\n\t\tcolors: {\n\t\t\tbrand: '#d64541',\n\t\t\tfacebook: '#007fff',\n\t\t\tinstagram: '#E00086'\n\t\t},\n\t\tfont: {\n\t\t\tfamily: 'Jost'\n\t\t},\n\t\tanchor: {\n\t\t\tcolor: {\n\t\t\t\tdark: 'green',\n\t\t\t\tlight: 'light-1'\n\t\t\t}\n\t\t}\n\t}\n});\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Grommet theme={myTheme} full>\n\t\t\t<App />\n\t\t</Grommet>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}